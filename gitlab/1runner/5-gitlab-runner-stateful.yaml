apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab-ci-runner
  namespace: gitlab-runner
  labels:
    app: gitlab-ci-runner
spec:
  selector:
    matchLabels:
      app: gitlab-ci-runner
  updateStrategy:
    type: RollingUpdate
  replicas: 3
  serviceName: gitlab-ci-runner
  template:
    metadata:
      labels:
        app: gitlab-ci-runner
    spec:
      hostAliases:
      - ip: "172.16.15.7"
        hostnames:
        - "bjrdc7"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - gitlab-ci-runner
      volumes:
      - name: gitlab-ci-runner-file
        configMap:
          name: gitlab-ci-runner-file
          defaultMode: 0755
      serviceAccountName: gitlab-ci
      containers:
      - image: gitlab/gitlab-runner:alpine-v14.1.0
        name: gitlab-ci-runner
        command:
        - /scripts/run.sh
        envFrom:
        - configMapRef:
            name: gitlab-ci-runner-cm
        - secretRef:
            name: gitlab-ci-token
        env:
        - name: RUNNER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RUNNER_PRE_CLONE_SCRIPT
          value: "echo '172.16.15.7 bjrdc7' >> /etc/hosts"
        - name: RUNNER_PRE_BUILD_SCRIPT
          value: for i in {1..254}; do echo 172.16.15.$i bjrdc$i >> /etc/hosts;done 
        ports:
        - containerPort: 9100
          name: http-metrics
          protocol: TCP
        volumeMounts:
        - name: gitlab-ci-runner-file
          mountPath: /scripts/run.sh
          subPath: run.sh
          readOnly: true
        - name: gitlab-ci-runner-file
          mountPath: /scripts/sethost.sh
          subPath: sethost.sh
          readOnly: true
      restartPolicy: Always

